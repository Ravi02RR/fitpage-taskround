// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  fullName  String
  createdAt DateTime @default(now())
  reviews   Review[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  createdAt   DateTime @default(now())
  reviews     Review[]
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  productId String
  rating    Int?
  comment   String?
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  photos ReviewPhoto[]

  @@unique([userId, productId])
}

// model Tag {
//   id        String      @id @default(cuid())
//   name      String      @unique
//   reviews   ReviewTag[]
//   createdAt DateTime    @default(now())
// }

// model ReviewTag {
//   review   Review @relation(fields: [reviewId], references: [id])
//   reviewId String

//   tag   Tag    @relation(fields: [tagId], references: [id])
//   tagId String

//   @@id([reviewId, tagId])
// }

model ReviewPhoto {
  id        String   @id @default(cuid())
  reviewId  String
  url       String
  createdAt DateTime @default(now())
  review    Review   @relation(fields: [reviewId], references: [id])
}
